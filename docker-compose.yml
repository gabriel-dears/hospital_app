services:
  user-service:
    build:
      context: ./
      dockerfile: user_service/Dockerfile
    container_name: hospital-app-user-service
    depends_on:
      - user-service-db
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      DEBUG: "true"
      HOSPITAL_APP_USER_SERVICE_DB_URL: jdbc:postgresql://user-service-db:5432/user_service_db
      HOSPITAL_APP_USER_SERVICE_DB_USER: user
      HOSPITAL_APP_USER_SERVICE_DB_PASS: pass
      HOSPITAL_APP_USER_SERVICE_DB_DRIVER: org.postgresql.Driver
      HOSPITAL_APP_USER_SERVICE_DB_DDL_AUTO: update
      HOSPITAL_APP_USER_SERVICE_DB_DIALECT: org.hibernate.dialect.PostgreSQLDialect
  user-service-db:
    image: postgres:15-alpine3.21
    container_name: hospital-app-user-service-db
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - user-service-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5443:5432"
#  appointment-service:
#    build:
#      context: ./
#      dockerfile: appointment_service/Dockerfile
volumes:
  user-service-postgres-data: