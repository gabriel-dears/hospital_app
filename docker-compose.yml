services:
  user-service:
    build:
      context: ./
      dockerfile: user_service/Dockerfile
    container_name: hospital-app-user-service
    depends_on:
      - user-service-db
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      - DEBUG=${DEBUG}
      - HOSPITAL_APP_USER_SERVICE_DB_URL=${HOSPITAL_APP_USER_SERVICE_DB_URL}
      - HOSPITAL_APP_USER_SERVICE_DB_USER=${HOSPITAL_APP_USER_SERVICE_DB_USER}
      - HOSPITAL_APP_USER_SERVICE_DB_PASS=${HOSPITAL_APP_USER_SERVICE_DB_PASS}
      - HOSPITAL_APP_USER_SERVICE_DB_DRIVER=${HOSPITAL_APP_USER_SERVICE_DB_DRIVER}
      - HOSPITAL_APP_USER_SERVICE_DB_DDL_AUTO=${HOSPITAL_APP_USER_SERVICE_DB_DDL_AUTO}
      - HOSPITAL_APP_USER_SERVICE_DB_DIALECT=${HOSPITAL_APP_USER_SERVICE_DB_DIALECT}

  user-service-db:
    image: postgres:15-alpine3.21
    container_name: hospital-app-user-service-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - user-service-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5443:5432"

volumes:
  user-service-postgres-data:
